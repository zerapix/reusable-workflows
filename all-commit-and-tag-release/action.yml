name: Commit And Tag Release
description: Reusable action to commit and tag release via commit-and-tag-version.
runs:
  using: composite
  steps:
    # TODO: Copy over the versionsrc-config file to the current root-directory
    - run: echo Running On Ref ${{ github.ref }}
      shell: bash

    - run: npm install commit-and-tag-version
      shell: bash
    - run: cp .reusable-workflows/versionsrc-config/python.versionrc.json .versionrc.json
      shell: bash

    - name: (debug + failure) Setup SSH Session
      uses: mxschmitt/action-tmate@v3
    #        if: ${{ runner.debug == 1 }}
      with:
        timeout-minutes: 20
        limit-access-to-actor: true

    - name: Increment, Tag and Commit for Release
      shell: bash
      run: |
        git config user.name "$(git log -n 1 --pretty=format:%an) (action)"
        git config user.email "$(git log -n 1 --pretty=format:%ae)"
        yarn commit-and-tag-version
        # Push branch first, if this fails we want to stop here (before push tag).
    - name: Push Release To Main
      shell: bash
      run: |
        echo "If Below Push Fails, that means another PR was merged; we let that next PR create the release and let us remain failed here."
        git push origin main
        git push --follow-tags origin main

    # TODO: Won't have access to github event info?  See if this still works in an action
    - name: If Push Fails, Comment On PR About Why
      if: failure() && github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged
      uses: thollander/actions-comment-pull-request@v2
      with:
        message: |
          :robot: Release can't be directly created due to another merged PR near same time; this will be released with this other PR's release.
    

    - name: Get Tag Name
      shell: bash
      id: tag-out
      run: |
        tag_name=$( (git describe --tags --abbrev=0 | tr -d " \n\t\r") )
        echo "Using Tag Name: $tag_name"
        echo "value=$tag_name" >> $GITHUB_OUTPUT
    - name: Get Changelog
      shell: bash
      id: change-log
      run: |
        change_log="$(git diff --unified=0 --color-words --no-prefix HEAD~1 HEAD -- CHANGELOG.md  | perl -wlne 'print $1 if /^\e\[32m(.*)\e\[m$/')"
        echo "Using Change Log: $change_log"
        EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
        echo "value<<$EOF" >> $GITHUB_OUTPUT
        echo "$change_log" >> $GITHUB_OUTPUT
        echo "$EOF" >> $GITHUB_OUTPUT
    - name: Create Release
      uses: softprops/action-gh-release@v1
      id: create-release
      with:
        tag_name: refs/tags/${{ steps.tag-out.outputs.value }}
        name: ${{ steps.tag-out.outputs.value }}
        generate_release_notes: false
        body: ${{ steps.change-log.outputs.value }}
    - name: Debug Event Info
      shell: bash
      run: echo event_name ${{ github.event_name }} action ${{ github.event.action }} merged ${{ github.event.pull_request.merged }}
