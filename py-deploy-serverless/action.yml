name: Deploy Python via Serverless
description: Reusable action to deploy Python via the Serverless Framework.
inputs:
  environment:
    description: Environmental name to deploy in.
    required: true

  override-stage-name:
    description: Environmental name to deploy in.
    required: false
    default: ''

  AWS_ACCESS_KEY_ID:
    description: AWS Key ID to use while deploying.
    required: true

  AWS_SECRET_ACCESS_KEY:
    description:  AWS Key Secret to use while deploying.
    required: true
runs:
  using: composite
  steps:
    #----------------------------------------------
    # Install serverless framework and deploy
    #----------------------------------------------
    - name: Setup Node.js
      id: setup_node
      uses: actions/setup-node@v3
      with:
        node-version: "18"
        cache: "yarn"
    - name: Install Yarn/Serverless Deps Into ${{ steps.setup_node.outputs.node-version }}
      run: yarn install --frozen-lockfile
      shell: bash
    - name: Check For Pre-Serverless Hook Script
      id: check_pre_serverless_hook_file
      uses: andstor/file-existence-action@v2
      with:
        files: .github/hooks/sls-deploy-pre.sh
    - name: Run Pre-Serverless Hook Script
      if: steps.check_pre_serverless_hook_file.outputs.files_exists == 'true'
      shell: bash
      run: bash .github/hooks/sls-deploy-pre.sh
      env:
        APP_ENV: ${{ inputs.environment }}
        AWS_ACCESS_KEY_ID: ${{ inputs.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
    - name: Set stage to use output
      shell: bash
      id: stage
      run: |
        USER_INPUT1=${{ inputs.override-stage-name }}
        USER_INPUT2=${{ inputs.environment }}
        echo "value=${USER_INPUT1:-${USER_INPUT2}}" >> $GITHUB_OUTPUT
    - name: Serverless Deploy to dev
      # Hard-coding the environment for now, when we start dealing with other environments
      # look into environment feature of github actions/workflows.
      run: |
        yarn sls deploy --verbose --stage ${{ steps.stage.value }} --force
        yarn sls doctor
      shell: bash
      env:
        # todo: checkout what we can do with `SERVERLESS_ACCESS_KEY`:
        #  SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
        # todo: For now use AWS credentials directly
        AWS_ACCESS_KEY_ID: ${{ inputs.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
        APP_ENV: ${{ inputs.environment }}
