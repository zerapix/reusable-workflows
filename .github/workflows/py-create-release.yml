# Creates a release; if you want to use this in other projects a better start is probably
# one of the py-merge-to-main-* workflows (which in turn can use this reusable workflow).
on:
  workflow_call:
    inputs:
      need-testing-db:
        type: boolean
        default: false
        description: If DB service is needed for testing.

concurrency: create-release
run-name: Create Release + Auto Deploy by @${{ github.actor }}

name: Create Release
jobs:
  test-with-db-if-needed:
    name: Test With DB If Needed
    if: ${{ inputs.need-testing-db }}
    uses: zerapix/reusable-workflows/.github/workflows/py-test-w-db.yml@test

  create-release:
    name: Create Release
    needs: test-with-db-if-needed
    runs-on: ubuntu-latest
    # If are already on a 'release' commit, we should skip this job.
    # We have `always()` so this job still runs even if `test-with-db-if-needed` is skipped.
    if: "${{ always() && !startsWith(github.event.head_commit.message, 'chore(release): ') && !failure() && !cancelled() }}"
    outputs:
      created-release-tag-name: ${{ steps.release.outputs.created-release-tag-name }}
    steps:
      - uses: zerapix/reusable-workflows/all-checkout-writable@test
        with:
          zreleasebot_app_id: ${{ secrets.ZRELEASEBOT_APP_ID }}
          zreleasebot_private_key: ${{ secrets.ZRELEASEBOT_PRIVATE_KEY }}

      - uses: ./.reusable-workflows/py-setup-project
        with:
          GEMFURY_DEPLOY_TOKEN: ${{ secrets.GEMFURY_DEPLOY_TOKEN }}

      - uses: ./.reusable-workflows/py-run-tests
        name: Normal Test (without DB)
        if: ${{ !inputs.need-testing-db }}

      - uses: ./.reusable-workflows/py-create-release
        id: release

  # Create Separate Job, to distinguish release-creation from deployment
  # (release could have succeeded but deployment fail, can easily re-run deployment without running create-release again)
  deploy-release:
    name: Trigger Release Auto Deploy
    needs: create-release
    runs-on: ubuntu-latest
    # If are already on a 'release' commit, we should skip this job.
    # We have `always()` so this job still runs even if `test-with-db-if-needed` is skipped.
    if: "${{ always() && !startsWith(github.event.head_commit.message, 'chore(release): ') && !failure() && !cancelled() }}"
    steps:
      - name: Release Thunk
        run: echo "Deployed Tag ${{ needs.create-release.outputs.created-release-tag-name }}"
      - name: Trigger Workflow
        uses: actions/github-script@v7
        with:
          # Run a new workflow job, using originating repo's standard `deployment.yml` via workflow_dispatch
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'deployment-auto.yml',
              ref: 'refs/tags/${{ needs.create-release.outputs.created-release-tag-name }}',
            })
