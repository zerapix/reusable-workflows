# Creates a release; if you want to use this in other projects a better start is probably
# one of the py-merge-to-main-* workflows (which in turn can use this reusable workflow).
on:
  workflow_call:
    inputs:
      reusable-ref:
        type: string
        default: main
        description: Reusable workflow branch/tag/etc I am being called in.

      # *** Ignored Inputs ***
      # (here in case something tries to pass it in, workflow will still work).
      RUN_TESTS:
        required: false
        type: string
        description: _ ***CURRENTLY IGNORED** Python package we are versioning/deploying; only skips if string is set to 'false' (using string, as composite actions only use strings)
        default: 'true'

    outputs:
      created-release:
        description: "If final/tagged release was created or not."
        value: ${{ jobs.create-pre-or-release.outputs.created-release }}

name: Create Release
jobs:
  create-pre-or-release:
    runs-on: ubuntu-latest
    # If are already on a 'release' commit, we should skip this job.
    if: "!startsWith(github.event.head_commit.message, 'chore(release): ')"
    outputs:
      release-tag: ${{ steps.tag-out.outputs.value }}
    steps:
#      - name: (debug + failure) Setup SSH Session
#        uses: mxschmitt/action-tmate@v3
##        if: ${{ runner.debug == 1 }}
#        with:
#          timeout-minutes: 20
#          limit-access-to-actor: true


      - uses: zerapix/reusable-workflows/all-checkout@test
        with:
          # fetch-depth 0 will check out all the commits and tags needed for release-bumper
          fetch-depth: 0
          reusable-ref: ${{ inputs.reusable-ref }}
          zreleasebot_app_id: ${{ secrets.ZRELEASEBOT_APP_ID }}
          zreleasebot_private_key: ${{ secrets.ZRELEASEBOT_PRIVATE_KEY }}


#        env:
#          # todo: checkout what we can do with `SERVERLESS_ACCESS_KEY`:
#          #  SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
#          # todo: For now use AWS credentials directly
#          AWS_ACCESS_KEY_ID: ${{ inputs.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
#          APP_ENV: ${{ inputs.environment }}

      - name: Fail It!
        shell: bash
        run: exit 1


      - uses: ./.reusable-workflows/py-setup-project
        with:
          GEMFURY_DEPLOY_TOKEN: ${{ secrets.GEMFURY_DEPLOY_TOKEN }}
#      - uses: ./.reusableusable-workflows/py-create-release
#        id: release
#        with:
#          GEMFURY_DEPLOY_TOKEN: ${{ secrets.GEMFURY_DEPLOY_TOKEN }}
#          release-branch: ${{ inputs.release-branch }}
