# Normally called when a PR is closed
# (this allows for a comment to be placed on PR about what version it got released as)
#
# BUT can also be called on a `push` event to the main branch.

on:
  workflow_call:

concurrency: create-release
run-name: Create Release + Auto Deploy by @${{ github.actor }}

name: Create Release
jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      created-release-tag-name: ${{ steps.release.outputs.created-release-tag-name }}
    # If are already on a 'release' commit, we should skip this job.
    if: "!startsWith(github.event.head_commit.message, 'chore(release): ')"
    steps:
      - uses: zerapix/reusable-workflows/all-checkout-writable@z_v2
        with:
          zreleasebot_app_id: ${{ secrets.ZRELEASEBOT_APP_ID }}
          zreleasebot_private_key: ${{ secrets.ZRELEASEBOT_PRIVATE_KEY }}

      - uses: ./.reusable-workflows/js-setup-project

      - name: Copy .versionrc.json File...
        shell: bash
        run: cp .reusable-workflows/versionsrc-config/javascript.versionrc.json .versionrc.json

      - uses: ./.reusable-workflows/all-commit-and-tag-release
        id: release

  # Create Separate Job, to distinguish release-creation from deployment
  # (release could have succeeded but deployment fail, can easily re-run deployment without running create-release again)
  deploy-release:
    needs: create-release
    runs-on: ubuntu-latest
    # If are already on a 'release' commit, we should skip this job.
    if: "!startsWith(github.event.head_commit.message, 'chore(release): ')"
    steps:
      - name: Release Deployment Thunk
        run: echo "Deployed Tag ${{ needs.create-release.outputs.created-release-tag-name }}"
      - name: Trigger Workflow
        uses: actions/github-script@v7
        with:
          # Run a new workflow job, using originating repo's standard `deployment.yml` via workflow_dispatch
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'deployment-auto.yml',
              ref: 'refs/tags/${{ needs.create-release.outputs.created-release-tag-name }}',
            })
