# Normally called when a PR is closed
# (this allows for a comment to be placed on PR about what version it got released as)
#
# BUT can also be called on a `push` event to the main branch.

on:
  workflow_call:
    inputs:
      reusable-ref:
        type: string
        default: main
        description: Reusable workflow branch/tag/etc I am being called in.

concurrency: create-release
run-name: Create Release + Auto Deploy by @${{ github.actor }}

name: merge-to-main-release-please
jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      release-tag: ${{ steps.tag-out.outputs.value }}
    # If are already on a 'release' commit, we should skip this job.
    if: "!startsWith(github.event.head_commit.message, 'chore(release): ')"
    steps:
      - uses: zerapix/reusable-workflows/all-checkout@main
        with:
          # fetch-depth 0 will check out all the commits and tags needed for release-bumper
          fetch-depth: 0
          reusable-ref: ${{ inputs.reusable-ref }}
      - uses: ./.reusable-workflows/js-setup-project

      - run: echo Running On Ref ${{ github.ref }}
      - name: Increment, Tag and Commit for Release
        run: |
          git config user.name "$(git log -n 1 --pretty=format:%an) (action)"
          git config user.email "$(git log -n 1 --pretty=format:%ae)"
          yarn commit-and-tag-version
          git push --follow-tags origin main
      - name: Get Tag Name
        id: tag-out
        run: |
          tag_name=$( (git describe --tags --abbrev=0 | tr -d " \n\t\r") )
          echo "Using Tag Name: $tag_name"
          echo "value=$tag_name" >> $GITHUB_OUTPUT
      - name: Get Changelog
        id: change-log
        run: |
          change_log="$(git diff --unified=0 --color-words --no-prefix HEAD~1 HEAD -- CHANGELOG.md  | perl -wlne 'print $1 if /^\e\[32m(.*)\e\[m$/')"
          echo "Using Change Log: $change_log"
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "value<<$EOF" >> $GITHUB_OUTPUT
          echo "$change_log" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT
      - name: Create Release
        uses: softprops/action-gh-release@v1
        id: create-release
        with:
          tag_name: refs/tags/${{ steps.tag-out.outputs.value }}
          name: ${{ steps.tag-out.outputs.value }}
          generate_release_notes: false
          body: ${{ steps.change-log.outputs.value }}
      - name: Debug Event Info
        run: echo event_name ${{ github.event_name }} action ${{ github.event.action }} merged ${{ github.event.pull_request.merged }}

      # If we are a `pull_request` event, we can add a comment to it about the release.
      - name: Link From PR to Release
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            :robot: Released As ${{ steps.tag-out.outputs.value }}, ${{ steps.create-release.outputs.url }}
  

  # Create Separate Job, to distinguish release-creation from deployment
  # (release could have succeeded but deployment fail, can easily re-run deployment without running create-release again)
  deploy-release:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Release Thunk
        run: echo "Deployed Tag ${{ needs.create-release.outputs.release-tag }}"
      - name: Trigger Workflow
        uses: actions/github-script@v6
        with:
          # Run a new workflow job, using originating repo's standard `deployment.yml` via workflow_dispatch
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'deployment-auto.yml',
              ref: 'refs/tags/${{ needs.create-release.outputs.release-tag }}',
            })
